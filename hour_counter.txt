16/12: 11:27 - 11:57 (setup environment, download data)
17/12: 10:40 - 11:10 (data loading, learning package, choosing data)

(1 hour)

11:10 - 11:40 - (having a look at Kloppy and event data. The only advantage I saw of using Kloppy was to transform the data, which I shan't be doing.)
14:05 - 14:35 
Reading the statsbomb event docs, to see what event attributes means.
Thinking I should start with a match aggregated model, then move to a within game windowed aggregated model
Need to divide the data up into attacking and defensive features
possession_team and team for identifying which team is doing attacking / defending
possesion for unique possessions - useful if you want to identify chains (better for aggregating)
Some statistical reason for breaking up the play into smaller phases - can we validate that teams play with different phases during the game?
Filter to Regular Play in play_pattern
Direction of play needs some logic depending on half and team.
Pass direction is from the horizontal

(2 hours done)

14:35 - 15:05
Trying to work out if there's a good way of identifying which direction is forward for which team. 0 towards attacking goal
Took me a while to understand how location worked. Forward can be defined as between abs(angle)<pi/4, backward as 3pi/4<abs(angle), else sideways.
Aggregrate pass directions.
Thinking about location data - how should I bin event locations - I like thirds, nice and easy - horizontal and vertical. Aggregrate number of defensive/attacking
actions in certain thirds?
16:10 - 16:40
Create list of attacking/defensive attributes that I'm going to use, and write what features I want to engineer from them.
I'm going to store these in a YAML, such that they can be like a config file.
Could change pass direction sideways to out/in

(3 hours done)

16:40 - 17:10
Finished list of features I want to develop for match averaged play styles in attack
19/12
15:55 - 16:25
Develop code for locating which zone on a pitch an xy coordinate is.

(4 hours done)

16:25 - 16:55
Finish identifying defensive features
Start thinking about how we want to proccess them all.
I want to aggregate by at least two methods, match, sequence. And then perhaps have a rolling window style, if we have time.
Developed start of feature engineering code
Next up:
Start developing feature engineering aggregations and how they relate to the config file

(5 hours done)
20/12
18:30 - 19:00
Created some features for pass angle and length
19:05 - 19:35
Wrote contracts for features engineering, with docstrings.
(6 hours done)
Next up is trying to get all the features done and calculated.
21/12
16:35 - 17:35
Spent a lot of time coding locations
17:35 - 18:05
Got pitch zones with one hot encoding done
Got pass angles and distances binning done
(7 hours done)

27/12
15:10
Get feature engineering working and check it
17:14
Got hardcoded feature engineering pipeline working
17:48
Basic features for one WSL season hardcoded, processed, and examined in notebook
~9 hrs 40min
Next up is cleanup, docs, testing, basic cluster model?

28/12
Added some docstrings, modelling examples with features

29/12
Added readme, finishing up.
